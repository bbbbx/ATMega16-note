Interrupt Vectors
    00000 940C 002A JMP	__text_start|__start

Program Code (text area)
__text_start|__start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51CE      SUBI	R28,0x1E
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 36E0      CPI	R30,0x60
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0061 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
_delay:
  i                    --> R20
  j                    --> R22
  n                    --> R16
    0004D 940E 00E5 CALL	push_xgsetF000
FILE: C:\Users\z\Desktop\作业\作业3\srouce\LED.c
(0001) #include <iom16v.h> 
(0002) 
(0003) void delay(int n)
(0004) {
(0005)   int i , j;
(0006)   for (i = 0 ; i < n ; i ++)  
    0004F 2744      CLR	R20
    00050 2755      CLR	R21
    00051 C00A      RJMP	0x005C
(0007)     for(j = 0 ; j < 1141 ; j++)  ;
    00052 2766      CLR	R22
    00053 2777      CLR	R23
    00054 5F6F      SUBI	R22,0xFF
    00055 4F7F      SBCI	R23,0xFF
    00056 3765      CPI	R22,0x75
    00057 E0E4      LDI	R30,4
    00058 077E      CPC	R23,R30
    00059 F3D4      BLT	0x0054
    0005A 5F4F      SUBI	R20,0xFF
    0005B 4F5F      SBCI	R21,0xFF
    0005C 1740      CP	R20,R16
    0005D 0751      CPC	R21,R17
    0005E F39C      BLT	0x0052
    0005F 940C 00EA JMP	pop_xgsetF000
(0008) }
(0009) 
(0010) void main()
(0011) {
(0012)   unsigned int run = 0;
_main:
  run                  --> R20
    00061 2744      CLR	R20
    00062 2755      CLR	R21
(0013)   DDRA = 0xff;
    00063 EF8F      LDI	R24,0xFF
    00064 BB8A      OUT	0x1A,R24
(0014)   PORTA = 0x00;
    00065 2422      CLR	R2
    00066 BA2B      OUT	0x1B,R2
(0015)   DDRB = 0x00;
    00067 BA27      OUT	0x17,R2
(0016)   PORTB = 0x01;
    00068 E081      LDI	R24,1
    00069 BB88      OUT	0x18,R24
    0006A C078      RJMP	0x00E3
(0017)   while(1)
(0018)   {
(0019)     if ((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    0006B 99B0      SBIC	0x16,0
    0006C C002      RJMP	0x006F
(0020)     {
(0021) 	  run++;
    0006D 5F4F      SUBI	R20,0xFF
    0006E 4F5F      SBCI	R21,0xFF
(0022)     }
(0023) 	switch(run)
    0006F 3041      CPI	R20,1
    00070 E0E0      LDI	R30,0
    00071 075E      CPC	R21,R30
    00072 F031      BEQ	0x0079
    00073 3042      CPI	R20,2
    00074 E0E0      LDI	R30,0
    00075 075E      CPC	R21,R30
    00076 F409      BNE	0x0078
    00077 C069      RJMP	0x00E1
    00078 C06A      RJMP	0x00E3
(0024) 	{
(0025) 	  case 1:
(0026) 	  	     PORTA = 0x01;  delay(100);  if((PINB & (1<<PB0) ) == 0)    //判断是否按下按键
    00079 E081      LDI	R24,1
    0007A BB8B      OUT	0x1B,R24
    0007B E604      LDI	R16,0x64
    0007C E010      LDI	R17,0
    0007D DFCF      RCALL	_delay
    0007E 99B0      SBIC	0x16,0
    0007F C006      RJMP	0x0086
(0027) 			 	   	 					 { 
(0028) 										   delay(75); 
    00080 E40B      LDI	R16,0x4B
    00081 E010      LDI	R17,0
    00082 DFCA      RCALL	_delay
(0029) 										   if((PINB & (1<<PB0) ) == 0)   //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    00083 99B0      SBIC	0x16,0
    00084 C001      RJMP	0x0086
(0030) 										   { 
(0031) 										     break;
    00085 C05D      RJMP	0x00E3
(0032) 										   } 
(0033) 										 }
(0034) 			 PORTA = 0x02;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    00086 E082      LDI	R24,2
    00087 BB8B      OUT	0x1B,R24
    00088 E604      LDI	R16,0x64
    00089 E010      LDI	R17,0
    0008A DFC2      RCALL	_delay
    0008B 99B0      SBIC	0x16,0
    0008C C006      RJMP	0x0093
(0035) 			 	   	 					 { 
(0036) 										   delay(75); 
    0008D E40B      LDI	R16,0x4B
    0008E E010      LDI	R17,0
    0008F DFBD      RCALL	_delay
(0037) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    00090 99B0      SBIC	0x16,0
    00091 C001      RJMP	0x0093
(0038) 										   { 
(0039) 										     break;
    00092 C050      RJMP	0x00E3
(0040) 										   } 
(0041) 										 }
(0042) 			 PORTA = 0x04;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    00093 E084      LDI	R24,4
    00094 BB8B      OUT	0x1B,R24
    00095 E604      LDI	R16,0x64
    00096 E010      LDI	R17,0
    00097 DFB5      RCALL	_delay
    00098 99B0      SBIC	0x16,0
    00099 C006      RJMP	0x00A0
(0043) 			 	   	 					 { 
(0044) 										   delay(75); 
    0009A E40B      LDI	R16,0x4B
    0009B E010      LDI	R17,0
    0009C DFB0      RCALL	_delay
(0045) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    0009D 99B0      SBIC	0x16,0
    0009E C001      RJMP	0x00A0
(0046) 										   { 
(0047) 										     break;
    0009F C043      RJMP	0x00E3
(0048) 										   } 
(0049) 										 }
(0050) 			 PORTA = 0x08;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    000A0 E088      LDI	R24,0x8
    000A1 BB8B      OUT	0x1B,R24
    000A2 E604      LDI	R16,0x64
    000A3 E010      LDI	R17,0
    000A4 DFA8      RCALL	_delay
    000A5 99B0      SBIC	0x16,0
    000A6 C006      RJMP	0x00AD
(0051) 			 	   	 					 { 
(0052) 										   delay(75); 
    000A7 E40B      LDI	R16,0x4B
    000A8 E010      LDI	R17,0
    000A9 DFA3      RCALL	_delay
(0053) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    000AA 99B0      SBIC	0x16,0
    000AB C001      RJMP	0x00AD
(0054) 										   { 
(0055) 										     break;
    000AC C036      RJMP	0x00E3
(0056) 										   } 
(0057) 										 }
(0058) 			 PORTA = 0x10;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    000AD E180      LDI	R24,0x10
    000AE BB8B      OUT	0x1B,R24
    000AF E604      LDI	R16,0x64
    000B0 E010      LDI	R17,0
    000B1 DF9B      RCALL	_delay
    000B2 99B0      SBIC	0x16,0
    000B3 C006      RJMP	0x00BA
(0059) 			 	   	 					 { 
(0060) 										   delay(75); 
    000B4 E40B      LDI	R16,0x4B
    000B5 E010      LDI	R17,0
    000B6 DF96      RCALL	_delay
(0061) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    000B7 99B0      SBIC	0x16,0
    000B8 C001      RJMP	0x00BA
(0062) 										   { 
(0063) 										     break;
    000B9 C029      RJMP	0x00E3
(0064) 										   } 
(0065) 										 }
(0066) 			 PORTA = 0x20;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    000BA E280      LDI	R24,0x20
    000BB BB8B      OUT	0x1B,R24
    000BC E604      LDI	R16,0x64
    000BD E010      LDI	R17,0
    000BE DF8E      RCALL	_delay
    000BF 99B0      SBIC	0x16,0
    000C0 C006      RJMP	0x00C7
(0067) 			 	   	 					 { 
(0068) 										   delay(75); 
    000C1 E40B      LDI	R16,0x4B
    000C2 E010      LDI	R17,0
    000C3 DF89      RCALL	_delay
(0069) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    000C4 99B0      SBIC	0x16,0
    000C5 C001      RJMP	0x00C7
(0070) 										   { 
(0071) 										     break;
    000C6 C01C      RJMP	0x00E3
(0072) 										   } 
(0073) 										 }
(0074) 			 PORTA = 0x40;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    000C7 E480      LDI	R24,0x40
    000C8 BB8B      OUT	0x1B,R24
    000C9 E604      LDI	R16,0x64
    000CA E010      LDI	R17,0
    000CB DF81      RCALL	_delay
    000CC 99B0      SBIC	0x16,0
    000CD C006      RJMP	0x00D4
(0075) 			 	   	 					 { 
(0076) 										   delay(75); 
    000CE E40B      LDI	R16,0x4B
    000CF E010      LDI	R17,0
    000D0 DF7C      RCALL	_delay
(0077) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    000D1 99B0      SBIC	0x16,0
    000D2 C001      RJMP	0x00D4
(0078) 										   { 
(0079) 										     break;
    000D3 C00F      RJMP	0x00E3
(0080) 										   } 
(0081) 										 }
(0082) 			 PORTA = 0x80;  delay(100);  if((PINB & (1<<PB0) ) == 0)  //判断是否按下按键
    000D4 E880      LDI	R24,0x80
    000D5 BB8B      OUT	0x1B,R24
    000D6 E604      LDI	R16,0x64
    000D7 E010      LDI	R17,0
    000D8 DF74      RCALL	_delay
    000D9 99B0      SBIC	0x16,0
    000DA C008      RJMP	0x00E3
(0083) 			 	   	 					 { 
(0084) 										   delay(75); 
    000DB E40B      LDI	R16,0x4B
    000DC E010      LDI	R17,0
    000DD DF6F      RCALL	_delay
(0085) 										   if((PINB & (1<<PB0) ) == 0)  //75ms后再次判断是否按下按键，有则跳出switch（多次试验后75ms效果较好）
    000DE 99B0      SBIC	0x16,0
    000DF C003      RJMP	0x00E3
(0086) 										   { 
(0087) 										     break;
    000E0 C002      RJMP	0x00E3
(0088) 										   } 
(0089) 										 }
(0090) 			 break;
(0091) 	  case 2:
(0092) 	  	     PORTA = 0x00;
FILE: <library>
    000E1 2422      CLR	R2
    000E2 BA2B      OUT	0x1B,R2
    000E3 CF87      RJMP	0x006B
    000E4 9508      RET
push_xgsetF000:
    000E5 937A      ST	-Y,R23
    000E6 936A      ST	-Y,R22
    000E7 935A      ST	-Y,R21
    000E8 934A      ST	-Y,R20
    000E9 9508      RET
pop_xgsetF000:
    000EA 9149      LD	R20,Y+
    000EB 9159      LD	R21,Y+
    000EC 9169      LD	R22,Y+
    000ED 9179      LD	R23,Y+
    000EE 9508      RET
