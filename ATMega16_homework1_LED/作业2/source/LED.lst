Interrupt Vectors
    00000 940C 002A JMP	__text_start|__start

Program Code (text area)
__text_start|__start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51CE      SUBI	R28,0x1E
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 36E0      CPI	R30,0x60
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0061 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
_delay:
  i                    --> R20
  j                    --> R22
  n                    --> R16
    0004D 940E 00BF CALL	push_xgsetF000
FILE: C:\Users\z\Desktop\作业\作业2\srouce\LED.c
(0001) #include <iom16v.h> 
(0002) 
(0003) void delay (int n)
(0004) {
(0005)   int i , j;
(0006)   for (i = 0 ; i < n ; i ++)  
    0004F 2744      CLR	R20
    00050 2755      CLR	R21
    00051 C00A      RJMP	0x005C
(0007)     for(j = 0 ; j < 1141 ; j++)  ;
    00052 2766      CLR	R22
    00053 2777      CLR	R23
    00054 5F6F      SUBI	R22,0xFF
    00055 4F7F      SBCI	R23,0xFF
    00056 3765      CPI	R22,0x75
    00057 E0E4      LDI	R30,4
    00058 077E      CPC	R23,R30
    00059 F3D4      BLT	0x0054
    0005A 5F4F      SUBI	R20,0xFF
    0005B 4F5F      SBCI	R21,0xFF
    0005C 1740      CP	R20,R16
    0005D 0751      CPC	R21,R17
    0005E F39C      BLT	0x0052
    0005F 940C 00C4 JMP	pop_xgsetF000
(0008) }
(0009) 
(0010) void main()
(0011) {
(0012)   DDRA = 0xff;
_main:
    00061 EF8F      LDI	R24,0xFF
    00062 BB8A      OUT	0x1A,R24
(0013)   PORTA = 0x00;
    00063 2422      CLR	R2
    00064 BA2B      OUT	0x1B,R2
(0014)   DDRB = 0x00;
    00065 BA27      OUT	0x17,R2
(0015)   PORTB = 0x03;
    00066 E083      LDI	R24,3
    00067 BB88      OUT	0x18,R24
    00068 C054      RJMP	0x00BD
(0016)   while(1)
(0017)   {
(0018)     if ((PINB & (1<<PB0) ) == 0)  //判断是否按下按键1
    00069 99B0      SBIC	0x16,0
    0006A C052      RJMP	0x00BD
(0019)     {
    0006B C050      RJMP	0x00BC
(0020) 	  while (1)  
(0021) 	  {
(0022) 	    PORTA = 0x01;
    0006C E081      LDI	R24,1
    0006D BB8B      OUT	0x1B,R24
(0023) 		delay(100);
    0006E E604      LDI	R16,0x64
    0006F E010      LDI	R17,0
    00070 DFDC      RCALL	_delay
(0024) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    00071 99B1      SBIC	0x16,1
    00072 C003      RJMP	0x0076
(0025) 		{
(0026) 		  PORTA = 0x00;
    00073 2422      CLR	R2
    00074 BA2B      OUT	0x1B,R2
(0027) 		  break;
    00075 C047      RJMP	0x00BD
(0028) 		}
(0029) 		PORTA = 0x02;
    00076 E082      LDI	R24,2
    00077 BB8B      OUT	0x1B,R24
(0030) 		delay(100);
    00078 E604      LDI	R16,0x64
    00079 E010      LDI	R17,0
    0007A DFD2      RCALL	_delay
(0031) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    0007B 99B1      SBIC	0x16,1
    0007C C003      RJMP	0x0080
(0032) 		{
(0033) 		  PORTA = 0x00;
    0007D 2422      CLR	R2
    0007E BA2B      OUT	0x1B,R2
(0034) 		  break;
    0007F C03D      RJMP	0x00BD
(0035) 		}
(0036) 		PORTA = 0x04;
    00080 E084      LDI	R24,4
    00081 BB8B      OUT	0x1B,R24
(0037) 		delay(100);
    00082 E604      LDI	R16,0x64
    00083 E010      LDI	R17,0
    00084 DFC8      RCALL	_delay
(0038) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    00085 99B1      SBIC	0x16,1
    00086 C003      RJMP	0x008A
(0039) 		{
(0040) 		  PORTA = 0x00;
    00087 2422      CLR	R2
    00088 BA2B      OUT	0x1B,R2
(0041) 		  break;
    00089 C033      RJMP	0x00BD
(0042) 		}
(0043) 		PORTA = 0x08;
    0008A E088      LDI	R24,0x8
    0008B BB8B      OUT	0x1B,R24
(0044) 		delay(100);
    0008C E604      LDI	R16,0x64
    0008D E010      LDI	R17,0
    0008E DFBE      RCALL	_delay
(0045) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    0008F 99B1      SBIC	0x16,1
    00090 C003      RJMP	0x0094
(0046) 		{
(0047) 		  PORTA = 0x00;
    00091 2422      CLR	R2
    00092 BA2B      OUT	0x1B,R2
(0048) 		  break;
    00093 C029      RJMP	0x00BD
(0049) 		}
(0050) 		PORTA = 0x10;
    00094 E180      LDI	R24,0x10
    00095 BB8B      OUT	0x1B,R24
(0051) 		delay(100);
    00096 E604      LDI	R16,0x64
    00097 E010      LDI	R17,0
    00098 DFB4      RCALL	_delay
(0052) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    00099 99B1      SBIC	0x16,1
    0009A C003      RJMP	0x009E
(0053) 		{
(0054) 		  PORTA = 0x00;
    0009B 2422      CLR	R2
    0009C BA2B      OUT	0x1B,R2
(0055) 		  break;
    0009D C01F      RJMP	0x00BD
(0056) 		}
(0057) 		PORTA = 0x20;
    0009E E280      LDI	R24,0x20
    0009F BB8B      OUT	0x1B,R24
(0058) 		delay(100);
    000A0 E604      LDI	R16,0x64
    000A1 E010      LDI	R17,0
    000A2 DFAA      RCALL	_delay
(0059) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    000A3 99B1      SBIC	0x16,1
    000A4 C003      RJMP	0x00A8
(0060) 		{
(0061) 		  PORTA = 0x00;
    000A5 2422      CLR	R2
    000A6 BA2B      OUT	0x1B,R2
(0062) 		  break;
    000A7 C015      RJMP	0x00BD
(0063) 		}
(0064) 		PORTA = 0x40;
    000A8 E480      LDI	R24,0x40
    000A9 BB8B      OUT	0x1B,R24
(0065) 		delay(100);
    000AA E604      LDI	R16,0x64
    000AB E010      LDI	R17,0
    000AC DFA0      RCALL	_delay
(0066) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    000AD 99B1      SBIC	0x16,1
    000AE C003      RJMP	0x00B2
(0067) 		{
(0068) 		  PORTA = 0x00;
    000AF 2422      CLR	R2
    000B0 BA2B      OUT	0x1B,R2
(0069) 		  break;
    000B1 C00B      RJMP	0x00BD
(0070) 		}
(0071) 		PORTA = 0x80;
    000B2 E880      LDI	R24,0x80
    000B3 BB8B      OUT	0x1B,R24
(0072) 		delay(100);
    000B4 E604      LDI	R16,0x64
    000B5 E010      LDI	R17,0
    000B6 DF96      RCALL	_delay
(0073) 		if((PINB & (1<<PB1) ) == 0)  //判断是否按下按键2
    000B7 99B1      SBIC	0x16,1
    000B8 C003      RJMP	0x00BC
(0074) 		{
(0075) 		  PORTA = 0x00;
    000B9 2422      CLR	R2
    000BA BA2B      OUT	0x1B,R2
(0076) 		  break;
FILE: <library>
    000BB C001      RJMP	0x00BD
    000BC CFAF      RJMP	0x006C
    000BD CFAB      RJMP	0x0069
    000BE 9508      RET
push_xgsetF000:
    000BF 937A      ST	-Y,R23
    000C0 936A      ST	-Y,R22
    000C1 935A      ST	-Y,R21
    000C2 934A      ST	-Y,R20
    000C3 9508      RET
pop_xgsetF000:
    000C4 9149      LD	R20,Y+
    000C5 9159      LD	R21,Y+
    000C6 9169      LD	R22,Y+
    000C7 9179      LD	R23,Y+
    000C8 9508      RET
