#include <iom16v.h>

unsigned char SEG7_CA[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e}; //共阳数码管段码
unsigned char DIS_CHAR[4];

void delay_ms(unsigned int ms)  //延时函数
{
  unsigned int i , j;
  for(i = 0 ; i < ms ; i++)
    for(j = 0 ; j < 1141 ; j++) ; 
}

void usart_init(void)     //配置usart寄存器
{
     DDRD&=~(1<<PD0);
	 PORTD|=1<<PD0;
	 DDRD|=1<<PD1;
	 PORTD|=1<<PD1;
	 UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);        //8位字符长度
	 UBRRL = 51;                                          //9600bps   8M
	 UCSRB = (1<<RXEN) | (1<<TXEN);          //接收使能，发送使能                                     
} 

void usart_send(unsigned char data)             //TXD发送数据
{
  while(!(UCSRA & (1<<UDRE)));   //等待发送缓存器空（等待前次发送完，再进行本次数据发送）
  UDR = data;
  while(!(UCSRA & (1<<TXC)));    //等待发送结束
}

void usart_read() 				 	 //读取数据
{
  unsigned char buf;
  while ( !(UCSRA & (1<<RXC)) );     // 等待接收缓存器空(等待接收完成再读取数据)
  
}

void main()
{
  SREG |= 1<<7;  //全局中断使能
  usart_init();
  /*初始化数码管*/
  DDRC |= 0xff;
  PORTC |= 0x00;
  DDRD |= 0xf0;
  PORTD |= 0x00;
  
  while(1)
  {
    while(!(UCSRA&(1<<RXC))) ;
	
	DIS_CHAR[0] = UDR;
    PORTD = 0x13;
    PORTC = SEG7_CA[DIS_CHAR[0]-48];
    delay_ms(20);
    DIS_CHAR[1] = UDR;
    PORTD = 0x123;
    PORTC = SEG7_CA[DIS_CHAR[1]-48];
    delay_ms(20);
    DIS_CHAR[2] = UDR;
    PORTD = 0x43;
    PORTC = SEG7_CA[DIS_CHAR[2]-48];
    delay_ms(20);
    DIS_CHAR[3] = UDR;
    PORTD = 0x83;
    PORTC = SEG7_CA[DIS_CHAR[3]-48];
    delay_ms(20);
  }
}