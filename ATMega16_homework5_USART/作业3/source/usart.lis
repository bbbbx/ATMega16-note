                        .module usart.c
                        .area text(rom, con, rel)
 0000                   .dbfile usart.c
                        .area data(ram, con, rel)
 0000                   .dbfile usart.c
 0000           _SEG7_CA::
 0000                   .blkb 2
                        .area idata
 0000 C0F9              .byte 192,249
                        .area data(ram, con, rel)
 0002                   .dbfile usart.c
 0002                   .blkb 2
                        .area idata
 0002 A4B0              .byte 164,176
                        .area data(ram, con, rel)
 0004                   .dbfile usart.c
 0004                   .blkb 2
                        .area idata
 0004 9992              .byte 153,146
                        .area data(ram, con, rel)
 0006                   .dbfile usart.c
 0006                   .blkb 2
                        .area idata
 0006 82F8              .byte 130,248
                        .area data(ram, con, rel)
 0008                   .dbfile usart.c
 0008                   .blkb 2
                        .area idata
 0008 8090              .byte 128,144
                        .area data(ram, con, rel)
 000A                   .dbfile usart.c
 000A                   .blkb 2
                        .area idata
 000A 8883              .byte 136,131
                        .area data(ram, con, rel)
 000C                   .dbfile usart.c
 000C                   .blkb 2
                        .area idata
 000C C6A1              .byte 198,161
                        .area data(ram, con, rel)
 000E                   .dbfile usart.c
 000E                   .blkb 2
                        .area idata
 000E 868E              .byte 134,142
                        .area data(ram, con, rel)
 0010                   .dbfile usart.c
 0010                   .dbfile C:\Users\z\Desktop\作业\作业3\source\usart.c
 0010                   .dbsym e SEG7_CA _SEG7_CA A[16:16]c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\z\Desktop\作业\作业3\source\usart.c
 0000                   .dbfunc e delay_ms _delay_ms fV
 0000           ;              i -> R20,R21
 0000           ;              j -> R22,R23
 0000           ;             ms -> R16,R17
                        .even
 0000           _delay_ms::
 0000 0E940000          xcall push_xgsetF000
 0004                   .dbline -1
 0004                   .dbline 7
 0004           ; #include <iom16v.h>
 0004           ; 
 0004           ; unsigned char SEG7_CA[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e}; //共阳数码管段码
 0004           ; unsigned char DIS_CHAR[4];
 0004           ; 
 0004           ; void delay_ms(unsigned int ms)  //延时函数
 0004           ; {
 0004                   .dbline 9
 0004           ;   unsigned int i , j;
 0004           ;   for(i = 0 ; i < ms ; i++)
 0004 4427              clr R20
 0006 5527              clr R21
 0008 0BC0              xjmp L5
 000A           L2:
 000A                   .dbline 10
 000A           ;     for(j = 0 ; j < 1141 ; j++) ; 
 000A 6627              clr R22
 000C 7727              clr R23
 000E 02C0              xjmp L9
 0010           L6:
 0010                   .dbline 10
 0010           L7:
 0010                   .dbline 10
 0010 6F5F              subi R22,255  ; offset = 1
 0012 7F4F              sbci R23,255
 0014           L9:
 0014                   .dbline 10
 0014 6537              cpi R22,117
 0016 E4E0              ldi R30,4
 0018 7E07              cpc R23,R30
 001A D0F3              brlo L6
 001C           X0:
 001C           L3:
 001C                   .dbline 9
 001C 4F5F              subi R20,255  ; offset = 1
 001E 5F4F              sbci R21,255
 0020           L5:
 0020                   .dbline 9
 0020 4017              cp R20,R16
 0022 5107              cpc R21,R17
 0024 90F3              brlo L2
 0026           X1:
 0026                   .dbline -2
 0026           L1:
 0026                   .dbline 0 ; func end
 0026 0C940000          xjmp pop_xgsetF000
 002A                   .dbsym r i 20 i
 002A                   .dbsym r j 22 i
 002A                   .dbsym r ms 16 i
 002A                   .dbend
 002A                   .dbfunc e usart_init _usart_init fV
                        .even
 002A           _usart_init::
 002A                   .dbline -1
 002A                   .dbline 14
 002A           ; }
 002A           ; 
 002A           ; void usart_init(void)     //配置usart寄存器
 002A           ; {
 002A                   .dbline 15
 002A           ;      DDRD&=~(1<<PD0);
 002A 8898              cbi 0x11,0
 002C                   .dbline 16
 002C           ;        PORTD|=1<<PD0;
 002C 909A              sbi 0x12,0
 002E                   .dbline 17
 002E           ;        DDRD|=1<<PD1;
 002E 899A              sbi 0x11,1
 0030                   .dbline 18
 0030           ;        PORTD|=1<<PD1;
 0030 919A              sbi 0x12,1
 0032                   .dbline 19
 0032           ;        UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);        //8位字符长度
 0032 86E8              ldi R24,134
 0034 80BD              out 0x20,R24
 0036                   .dbline 20
 0036           ;        UBRRL = 51;                                          //9600bps   8M
 0036 83E3              ldi R24,51
 0038 89B9              out 0x9,R24
 003A                   .dbline 21
 003A           ;        UCSRB = (1<<RXEN) | (1<<TXEN);          //接收使能，发送使能                                     
 003A 88E1              ldi R24,24
 003C 8AB9              out 0xa,R24
 003E                   .dbline -2
 003E           L10:
 003E                   .dbline 0 ; func end
 003E 0895              ret
 0040                   .dbend
 0040                   .dbfunc e usart_send _usart_send fV
 0040           ;           data -> R16
                        .even
 0040           _usart_send::
 0040                   .dbline -1
 0040                   .dbline 25
 0040           ; } 
 0040           ; 
 0040           ; void usart_send(unsigned char data)             //TXD发送数据
 0040           ; {
 0040           L12:
 0040                   .dbline 26
 0040           ;   while(!(UCSRA & (1<<UDRE)));   //等待发送缓存器空（等待前次发送完，再进行本次数据发送）
 0040           L13:
 0040                   .dbline 26
 0040 5D9B              sbis 0xb,5
 0042 FECF              rjmp L12
 0044           X2:
 0044                   .dbline 27
 0044           ;   UDR = data;
 0044 0CB9              out 0xc,R16
 0046           L15:
 0046                   .dbline 28
 0046           ;   while(!(UCSRA & (1<<TXC)));    //等待发送结束
 0046           L16:
 0046                   .dbline 28
 0046 5E9B              sbis 0xb,6
 0048 FECF              rjmp L15
 004A           X3:
 004A                   .dbline -2
 004A           L11:
 004A                   .dbline 0 ; func end
 004A 0895              ret
 004C                   .dbsym r data 16 c
 004C                   .dbend
 004C                   .dbfunc e usart_read _usart_read fV
 004C           ;            buf -> R20
                        .even
 004C           _usart_read::
 004C 4A93              st -y,R20
 004E                   .dbline -1
 004E                   .dbline 32
 004E           ; }
 004E           ; 
 004E           ; void usart_read()                                      //读取数据
 004E           ; {
 004E           L19:
 004E                   .dbline 34
 004E           ;   unsigned char buf;
 004E           ;   while ( !(UCSRA & (1<<RXC)) );     // 等待接收缓存器空(等待接收完成再读取数据)
 004E           L20:
 004E                   .dbline 34
 004E 5F9B              sbis 0xb,7
 0050 FECF              rjmp L19
 0052           X4:
 0052                   .dbline 35
 0052           ;   buf = UDR;
 0052 4CB1              in R20,0xc
 0054                   .dbline 36
 0054           ;   if((buf>=48) && (buf<=57))
 0054 4033              cpi R20,48
 0056 18F1              brlo L22
 0058           X5:
 0058 89E3              ldi R24,57
 005A 8417              cp R24,R20
 005C 00F1              brlo L22
 005E           X6:
 005E                   .dbline 37
 005E           ;   {
 005E                   .dbline 38
 005E           ;     PORTD = 0x13;
 005E 83E1              ldi R24,19
 0060 82BB              out 0x12,R24
 0062                   .dbline 39
 0062           ;     PORTC = SEG7_CA[0];
 0062 20900000          lds R2,_SEG7_CA
 0066 25BA              out 0x15,R2
 0068                   .dbline 40
 0068           ;     delay_ms(10);
 0068 0AE0              ldi R16,10
 006A 10E0              ldi R17,0
 006C C9DF              xcall _delay_ms
 006E                   .dbline 42
 006E           ;       
 006E           ;     PORTD = 0x123;
 006E 83E2              ldi R24,35
 0070 82BB              out 0x12,R24
 0072                   .dbline 43
 0072           ;     PORTC = SEG7_CA[1];
 0072 20900100          lds R2,_SEG7_CA+1
 0076 25BA              out 0x15,R2
 0078                   .dbline 44
 0078           ;     delay_ms(10);
 0078 0AE0              ldi R16,10
 007A 10E0              ldi R17,0
 007C C1DF              xcall _delay_ms
 007E                   .dbline 46
 007E           ;       
 007E           ;     PORTD = 0x43;
 007E 83E4              ldi R24,67
 0080 82BB              out 0x12,R24
 0082                   .dbline 47
 0082           ;     PORTC = SEG7_CA[2];
 0082 20900200          lds R2,_SEG7_CA+2
 0086 25BA              out 0x15,R2
 0088                   .dbline 48
 0088           ;     delay_ms(10);
 0088 0AE0              ldi R16,10
 008A 10E0              ldi R17,0
 008C B9DF              xcall _delay_ms
 008E                   .dbline 50
 008E           ;       
 008E           ;     PORTD = 0x83;
 008E 83E8              ldi R24,131
 0090 82BB              out 0x12,R24
 0092                   .dbline 51
 0092           ;     PORTC = SEG7_CA[3];
 0092 20900300          lds R2,_SEG7_CA+3
 0096 25BA              out 0x15,R2
 0098                   .dbline 52
 0098           ;     delay_ms(10);
 0098 0AE0              ldi R16,10
 009A 10E0              ldi R17,0
 009C B1DF              xcall _delay_ms
 009E                   .dbline 53
 009E           ;   }
 009E           L22:
 009E                   .dbline 55
 009E           ;   
 009E           ;   if((buf>=65&&buf<=90) || (buf>=97&&buf<=122))
 009E 4134              cpi R20,65
 00A0 18F0              brlo L30
 00A2           X7:
 00A2 8AE5              ldi R24,90
 00A4 8417              cp R24,R20
 00A6 28F4              brsh L29
 00A8           X8:
 00A8           L30:
 00A8 4136              cpi R20,97
 00AA 28F0              brlo L27
 00AC           X9:
 00AC 8AE7              ldi R24,122
 00AE 8417              cp R24,R20
 00B0 10F0              brlo L27
 00B2           X10:
 00B2           L29:
 00B2                   .dbline 56
 00B2           ;   {
 00B2                   .dbline 57
 00B2           ;     usart_send(buf);
 00B2 042F              mov R16,R20
 00B4 C5DF              xcall _usart_send
 00B6                   .dbline 58
 00B6           ;   }
 00B6           L27:
 00B6                   .dbline -2
 00B6           L18:
 00B6                   .dbline 0 ; func end
 00B6 4991              ld R20,y+
 00B8 0895              ret
 00BA                   .dbsym r buf 20 c
 00BA                   .dbend
 00BA                   .dbfunc e main _main fV
                        .even
 00BA           _main::
 00BA                   .dbline -1
 00BA                   .dbline 62
 00BA           ; }
 00BA           ; 
 00BA           ; void main()
 00BA           ; {
 00BA                   .dbline 63
 00BA           ;   SREG |= 1<<7;  //全局中断使能
 00BA 7894              bset 7
 00BC                   .dbline 64
 00BC           ;   usart_init();
 00BC B6DF              xcall _usart_init
 00BE                   .dbline 66
 00BE           ;   /*初始化数码管*/
 00BE           ;   DDRC |= 0xff;
 00BE 84B3              in R24,0x14
 00C0 8F6F              ori R24,255
 00C2 84BB              out 0x14,R24
 00C4                   .dbline 67
 00C4           ;   PORTC |= 0x00;
 00C4 25B2              in R2,0x15
 00C6 25BA              out 0x15,R2
 00C8                   .dbline 68
 00C8           ;   DDRD |= 0xf0;
 00C8 81B3              in R24,0x11
 00CA 806F              ori R24,240
 00CC 81BB              out 0x11,R24
 00CE                   .dbline 69
 00CE           ;   PORTD |= 0x00;
 00CE 22B2              in R2,0x12
 00D0 22BA              out 0x12,R2
 00D2 01C0              xjmp L33
 00D4           L32:
 00D4                   .dbline 72
 00D4           ;   
 00D4           ;   while(1)
 00D4           ;   {
 00D4                   .dbline 73
 00D4           ;     usart_read();
 00D4 BBDF              xcall _usart_read
 00D6                   .dbline 75
 00D6           ;     
 00D6           ;   }
 00D6           L33:
 00D6                   .dbline 71
 00D6 FECF              xjmp L32
 00D8           X11:
 00D8                   .dbline -2
 00D8           L31:
 00D8                   .dbline 0 ; func end
 00D8 0895              ret
 00DA                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\z\Desktop\作业\作业3\source\usart.c
 0000           _DIS_CHAR::
 0000                   .blkb 4
 0004                   .dbsym e DIS_CHAR _DIS_CHAR A[4:4]c
 0004           ; }
