                        .module usart.c
                        .area text(rom, con, rel)
 0000                   .dbfile usart.c
 0000                   .dbfile C:\Users\z\Desktop\作业\作业1\source\usart.c
 0000                   .dbfunc e USART_Init _USART_Init fV
                        .even
 0000           _USART_Init::
 0000                   .dbline -1
 0000                   .dbline 4
 0000           ; #include <iom16v.h>
 0000           ; 
 0000           ; void USART_Init()
 0000           ; {
 0000                   .dbline 5
 0000           ;   DDRD |= 1<<PD1;
 0000 899A              sbi 0x11,1
 0002                   .dbline 6
 0002           ;   PORTD |= 1<<PD1;
 0002 919A              sbi 0x12,1
 0004                   .dbline 7
 0004           ;   UCSRB |= 1<<TXEN;   //发送使能
 0004 539A              sbi 0xa,3
 0006                   .dbline 8
 0006           ;   UCSRC |= (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);  //设置8位字符长度
 0006 80B5              in R24,0x20
 0008 8668              ori R24,134
 000A 80BD              out 0x20,R24
 000C                   .dbline 9
 000C           ;   UBRRL = 51;    //9600bps
 000C 83E3              ldi R24,51
 000E 89B9              out 0x9,R24
 0010                   .dbline -2
 0010           L1:
 0010                   .dbline 0 ; func end
 0010 0895              ret
 0012                   .dbend
 0012                   .dbfunc e USART_Send _USART_Send fV
 0012           ;           data -> R16
                        .even
 0012           _USART_Send::
 0012                   .dbline -1
 0012                   .dbline 13
 0012           ; }
 0012           ; 
 0012           ; void USART_Send(unsigned char data)
 0012           ; {
 0012           L3:
 0012                   .dbline 14
 0012           ;   while( ! (UCSRA& (1<<UDRE) ) ) ;  //等待数据寄存器UDR为空
 0012           L4:
 0012                   .dbline 14
 0012 5D9B              sbis 0xb,5
 0014 FECF              rjmp L3
 0016           X0:
 0016                   .dbline 15
 0016           ;   UDR = data;
 0016 0CB9              out 0xc,R16
 0018           L6:
 0018                   .dbline 16
 0018           ;   while(! (UCSRA & (1<<TXC)) ) ;    //等待发送结束
 0018           L7:
 0018                   .dbline 16
 0018 5E9B              sbis 0xb,6
 001A FECF              rjmp L6
 001C           X1:
 001C                   .dbline -2
 001C           L2:
 001C                   .dbline 0 ; func end
 001C 0895              ret
 001E                   .dbsym r data 16 c
 001E                   .dbend
 001E                   .dbfunc e delay_ms _delay_ms fV
 001E           ;              i -> R20,R21
 001E           ;              j -> R22,R23
 001E           ;             ms -> R16,R17
                        .even
 001E           _delay_ms::
 001E 0E940000          xcall push_xgsetF000
 0022                   .dbline -1
 0022                   .dbline 21
 0022           ;   
 0022           ; }
 0022           ; 
 0022           ; void delay_ms(unsigned int ms) 
 0022           ; {
 0022                   .dbline 23
 0022           ;   unsigned int i , j;
 0022           ;   for(i = 0 ; i < ms ; i++)
 0022 4427              clr R20
 0024 5527              clr R21
 0026 0BC0              xjmp L13
 0028           L10:
 0028                   .dbline 24
 0028           ;     for(j = 0 ; j < 1141 ; j++) ;
 0028 6627              clr R22
 002A 7727              clr R23
 002C 02C0              xjmp L17
 002E           L14:
 002E                   .dbline 24
 002E           L15:
 002E                   .dbline 24
 002E 6F5F              subi R22,255  ; offset = 1
 0030 7F4F              sbci R23,255
 0032           L17:
 0032                   .dbline 24
 0032 6537              cpi R22,117
 0034 E4E0              ldi R30,4
 0036 7E07              cpc R23,R30
 0038 D0F3              brlo L14
 003A           X2:
 003A           L11:
 003A                   .dbline 23
 003A 4F5F              subi R20,255  ; offset = 1
 003C 5F4F              sbci R21,255
 003E           L13:
 003E                   .dbline 23
 003E 4017              cp R20,R16
 0040 5107              cpc R21,R17
 0042 90F3              brlo L10
 0044           X3:
 0044                   .dbline -2
 0044           L9:
 0044                   .dbline 0 ; func end
 0044 0C940000          xjmp pop_xgsetF000
 0048                   .dbsym r i 20 i
 0048                   .dbsym r j 22 i
 0048                   .dbsym r ms 16 i
 0048                   .dbend
 0048                   .dbfunc e main _main fV
                        .even
 0048           _main::
 0048                   .dbline -1
 0048                   .dbline 28
 0048           ; }
 0048           ; 
 0048           ; void main()
 0048           ; {
 0048                   .dbline 29
 0048           ;   SREG |= 1<<7;
 0048 7894              bset 7
 004A                   .dbline 30
 004A           ;   USART_Init();
 004A DADF              xcall _USART_Init
 004C 05C0              xjmp L20
 004E           L19:
 004E                   .dbline 33
 004E           ;   
 004E           ;   while(1)
 004E           ;   {
 004E                   .dbline 34
 004E           ;     USART_Send('A'); //发送字符'A'
 004E 01E4              ldi R16,65
 0050 E0DF              xcall _USART_Send
 0052                   .dbline 35
 0052           ;       delay_ms(1000);  //延时1000ms
 0052 08EE              ldi R16,1000
 0054 13E0              ldi R17,3
 0056 E3DF              xcall _delay_ms
 0058                   .dbline 36
 0058           ;   }
 0058           L20:
 0058                   .dbline 32
 0058 FACF              xjmp L19
 005A           X4:
 005A                   .dbline -2
 005A           L18:
 005A                   .dbline 0 ; func end
 005A 0895              ret
 005C                   .dbend
 005C           ; }
